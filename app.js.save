var express = require('express');
var querystring= require('querystring');
var path = require('path');
var favicon = require('serve-favicon');
var logger = require('morgan');
var cookieParser = require('cookie-parser');
var crypto = require('crypto');
var bodyParser = require('body-parser');
var request = require('request');
var config = require('./settings')
var session = require('express-session')


var app = express();

// view engine setup
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'ejs');

// uncomment after placing your favicon in /public
//app.use(favicon(__dirname + '/public/favicon.ico'));
app.use(logger('dev'));
app.use('/webhooks', bodyParser.raw({ type: 'application/json' }))
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: false }));
app.use(cookieParser());
app.use(session({secret: 'keyboard cat'}));
app.use(express.static(path.join(__dirname, 'public')));

// Shopify Authentication

// This function initializes the Shopify OAuth Process
// The template in views/embedded_app_redirect.ejs is rendered 

app.get('/render',function(req,res){

    console.log('rendering');
});

app.get('/shopify_auth', function(req, res) {
    if (req.query.shop) {
        req.session.shop = req.query.shop;

        req.session.vat;
        res.render('embedded_app_redirect', {
            shop: req.query.shop,
            api_key: config.oauth.api_key,
            scope: config.oauth.scope,
            redirect_uri: config.oauth.redirect_uri
        });
    }
})

// After the users clicks 'Install' on the Shopify website, they are redirected here
// Shopify provides the app the is authorization_code, which is exchanged for an access token
app.get('/access_token', verifyRequest, function(req, res) {
    if (req.query.shop) {
        var params = { 
            client_id: config.oauth.api_key,
            client_secret: config.oauth.client_secret,
            code: req.query.code
        }
        var req_body = querystring.stringify(params);
        console.log(req_body)
        request({
            url: 'https://' + req.query.shop + '/admin/oauth/access_token', 
           method: "POST",
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
                'Content-Length': Buffer.byteLength(req_body)
            },
            body: req_body
        }, 
        function(err,resp,body) {
            console.log(body);
            body = JSON.parse(body);
            req.session.access_token = body.access_token;
            console.log(req.session);
            res.redirect('/');
        })
    }
})

// Renders the install/login form
app.get('/install', function(req, res) {
    res.render('app_install', {
        title: 'Shopify Embedded App'
    });
})

// Renders content for a modal
app.get('/modal_content', function(req, res) {
    res.render('modal_content', {
        title: 'Embedded App Modal'
    });
})

// The home page, checks if we have the access token, if not we are redirected to the install page
// This check should probably be done on every page, and should be handled by a middleware
app.get('/', function(req, res) {
    if (req.session.access_token) {
          


        res.render('index', {
            title: 'Home',
            api_key: config.oauth.api_key,
            shop: req.session.shop
        });
    } else {
        res.redirect('/install');
    }
})


// app.get('/scripts', function(req, res) {
    
//     request.post({
//         url: 'https://' + req.session.shop + '.myshopify.com/admin/script_tags.json',
//         json: {
//             "script_tag": {
//               "event":"onload",
//               "src":"https://73bbebd2.ngrok.io/custom20.js"
//             }
//           },
//         headers: {
//             'X-Shopify-Access-Token': req.session.access_token
//         }
//     }, function(error, response, body){
//         if(error)
//             return next(error);
        
//         res.send(body);
//     })  
// })

app.get('/integrate',function(req,res){
  var getcountry;
  var CountryArray=[];
  var getTax;
   request.get({
       url: 'https://' + req.session.shop + '.myshopify.com/admin/shop.json',
       headers: {
       'X-Shopify-Access-Token': req.session.access_token
            }
},function(error,response,body)
{
    if(error)
    return next(error);
    body = JSON.parse(body);
    getcountry=body.shop.country_name;
    getCurrency=body.shop.money_format;
    getCurrency=getCurrency.replace('{{amount}}','');


    request.post({
        url: 'https://' + req.session.shop + '.myshopify.com/admin/metafields.json',
        json:{
            "metafield": {
              "namespace": "commerce_plugin",
              "key": "vat-currency",
              "value": getCurrency,
              "value_type": "string"
            }
          }
          ,
        headers: {
            'X-Shopify-Access-Token': req.session.access_token
        }
    }, function(error, response, body){
            return next(error);
    })  


    

});

 request.get({
    url: 'https://' + req.session.shop + '.myshopify.com/admin/countries.json',
    headers: {
    'X-Shopify-Access-Token': req.session.access_token
         }
},function(error,response,body)
{
 if(error)
 return next(error);
  body = JSON.parse(body);
  if(body.countries[0].tax){
    //   res.send(body.countries[0].tax);

      getTax= body.countries[0].tax;
      request.post({
        url: 'https://' + req.session.shop + '.myshopify.com/admin/metafields.json',
        json:{
            "metafield": {
              "namespace": "commerce_plugin",
              "key": "vat",
              "value": getTax,
              "value_type": "string"
            }
          }
          ,
        headers: {
            'X-Shopify-Access-Token': req.session.access_token
        }
    }, function(error, response, body){
        if(error)
            return next(error);
        
        
                }
var server_ip_address = '127.0.0.1';app.set('port', process.env.PORT || 3000);
var server = app.listen(app.get('port'), server_ip_address, function() {
  console.log('Express server listening on port ' + server.address().port);
});

module.exports = app;
